for (var i = 0; i < 15; i++) {
    $(div#board).append("<div class=\"board-row\" id=\"board-row\"></div>");
}
for (var i = 0; i < 15; i++) {
    for (var j = 0; j < 15; j++) {
        $$(div#board-row)[i].append("<div class=\"board-col\" id=\"board-col\" _row=\"" + i + "\" _col=\"" + j + "\"></div>");
    }
}
for (var i = 0; i < 225; i++) {
    $$(div#board-col)[i].append("<div class=\"cross-point\" id=\"cross-point\"></div>");
}

var game_config = {
    chess_color: "black";
    bot_difficulty: "easy";
    assist_ability: "superior";
}

var game_status = {
    last_chess: null;
    last_row: null;
    last_col: null;
    game_over: false;
}

function putChessAt(row, col, chess) {
    var crossPoint = q("div#board-col").eq(row * 15 + col);
    crossPoint.css("background-image", "url(" + chess + "_35_selection.png)");
}

function unselectLastChess() {
    if (game_status.last_chess && game_status.last_row && game_status.last_col) {
        var crossPoint = q("div#board-col").eq(game_status.last_row * 15 + game_status.last_col);
        crossPoint.css("background-image", "url(" + game_status.last_chess + "_35.png)");
    }
}

function selectLastChess() {
    if (game_status.last_chess && game_status.last_row && game_status.last_col) {
        var crossPoint = q("div#board-col").eq(game_status.last_row * 15 + game_status.last_col);
        crossPoint.css("background-image", "url(" + game_status.last_chess + "_35_selection.png)");
    }
}

function removeChessAt(row, col) {
    var crossPoint = q("div#board-col").eq(row.toInteger() * 15 + col.toInteger());
    crossPoint.css("background-image", "none");
}

function showResult(winner) {
    var winner_c = "错误";
    if (winner == "black") 
        winner_c = "黑棋";
    else if (winner == "white") 
        winner_c = "白棋";
    var choose = view.msgbox(#infomation, winner_c + "胜", "游戏结束", [
        {id: #replay, text: "重玩"},
        {id: #wait, text: "查看"}
    ]);

    if (choose == "replay")
        $(button#restart-game).trigger("click");
    else if (choose == "wait")
        game_status.game_over = true;
}

$(select#chess-color).on("change", function() {
    game_config.chess_color = $(select#chess-color).value;
    stdout.println(game_config.chess_color);
});

$(select#bot-difficulty).on("change", function() {
    game_config.bot_difficulty = $(select#bot-difficulty).value;
    stdout.println(game_config.bot_difficulty);
});

$(select#assist-ability).on("change", function() {
    game_config.assist_ability = $(select#assist-ability).value;
    stdout.println(game_config.assist_ability);
});

$(button#back-move).on("click", function() {
    var result = view.on_back_move();

    if (result) {
        removeChessAt(result.row, result.col);

        game_status.last_chess = result.last_chess;
        game_status.last_row = result.last_row;
        game_status.last_col = result.last_col;
        selectLastChess();
    }
});

$(button#restart-game).on("click", function() {
    view.on_restart_game();
    for (var i = 0; i < 15; i++) {
        for (var j = 0; j < 15; j++) {
            removeChessAt(i, j);
        }
    }

    game_status.last_chess = null;
    game_status.last_row = null;
    game_status.last_col = null;
    game_status.game_over = false;
});

$(button#next-step).on("click", function() {
    stdout.println("next-step");
});

for (var i = 0; i < 225; i++) {
    $$(div#cross-point)[i].on("click", function() {
        var cp = this.parent;
        var row = cp.attributes["_row"].toInteger();
        var col = cp.attributes["_col"].toInteger();
        var crossPoint = $$(this);

        if (!crossPoint.css("background-image") && !game_status.game_over) {
            var result = view.on_cross_point_click(row, col);
            putChessAt(row, col, result.current_chess);
            unselectLastChess();

            game_status.last_chess = result.current_chess;
            game_status.last_row = row;
            game_status.last_col = col;

            if (result.have_game_over) {
                showResult(result.winner);
            }
        }
    });
}